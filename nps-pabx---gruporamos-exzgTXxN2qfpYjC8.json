{"createdAt":"2025-03-07T12:31:08.411Z","updatedAt":"2025-03-07T12:52:40.164Z","id":"exzgTXxN2qfpYjC8","name":"NPS PABX - GrupoRamos","active":true,"nodes":[{"parameters":{"httpMethod":"POST","path":"nps02_teste","options":{}},"id":"92d98b4e-3cc4-4659-9aa8-ac0c7f0a7fa4","name":"Webhook1","type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-2060,320],"webhookId":"7dfa6834-557b-4040-b361-022a7e383e75"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bca732c9-3102-42d7-8fe8-bedede0ca0b9","leftValue":"={{ $json.body.direction }}","rightValue":"INBOUND","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1860,320],"id":"06aca52a-d573-4665-ac35-3664318edb45","name":"If"},{"parameters":{"jsCode":"// Função para formatar o timestamp no formato brasileiro DD/MM/YYYY HH:mm:ss\nfunction formatTimestamp(timestamp) {\n    const date = new Date(timestamp);\n    const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone: 'America/Fortaleza'\n    };\n    return date.toLocaleString('pt-BR', options).replace(',', ''); // Remove a vírgula entre data e hora\n}\n\n// Função para garantir que se uma lista estiver vazia, preencha com \"N/A\"\nfunction fillWithNA(dataArray) {\n    return dataArray.length > 0 ? dataArray : [\"N/A\"];\n}\n\n// Função para extrair participantes do tipo \"AGENT\" e dados de chamadas em estado \"STARTING\"\nfunction extractAgentsAndCallData(items) {\n    const participants = items[0].json.body.participants || []; // Acessa os participantes ou um array vazio\n    const callStates = items[0].json.body.callStates || []; // Acessa estados das chamadas ou um array vazio\n\n    // Inicializa os arrays para armazenar resultados\n    let callData = [];\n\n    // Iterar sobre os estados das chamadas para extrair dados\n    callStates.forEach(state => {\n        if (state.type === \"STARTING\") {\n            callData.push({\n                dataHora: formatTimestamp(state.timestamp), // Formata o timestamp\n                participants: fillWithNA(state.participants.map(participant => {\n                    // Extrai o nome, o número de extensão e o número do callee\n                    return {\n                        nameEmpresa: participant.type.name || \"N/A\",\n                        numeroEmpresa: participant.type.number || \"N/A\",\n                        numeroClient: participant.type.caller?.number || \"N/A\" // Utilizando optional chaining (?.)\n                    };\n                }))\n            });\n        }\n    });\n\n    // Preenche com \"N/A\" se agentes ou dados de chamadas estiverem vazios\n    return {\n        callData: fillWithNA(callData)\n    };\n}\n\n// Função principal para processar os dados e retornar resultados\nfunction processItems(items) {\n    const results = [];\n    const participantsData = items; // Recebe dados para processar como entrada\n\n    // Verifica se o JSON contém a mensagem de erro\n    if (participantsData[0].json.body.message === 'Nenhuma opção encontrada.') {\n        results.push({ message: 'Nenhuma opção encontrada. Tente outra busca.' });\n    } else {\n        // Extract ramal and operador when destinationNumber is \"1008\"\n        let participantsNumberData = []; // Inicializa array para armazenar números de destino\n\n        // Itera por cada entrada de dados\n        for (const data of participantsData) {\n            // Acessa os estados de todos os participantes em cada estado da chamada\n            for (const callState of data.json.body.callStates) {\n                const participants = callState.participants; // Acessa a lista de participantes\n                \n                // Itera pelos participantes e coleta os dados quando o status é \"IN_DIRECT_TRANSFER\"\n                for (const participant of participants) {\n                    if (participant.status && participant.status.value === \"IN_DIRECT_TRANSFER\") {\n                        // Acessa o número de destino e o nome do iniciador\n                        const destinationNumber = participant.status.destination?.number || null;\n                        const ramal = participant.status.initiator?.extensionNumber || null;\n                        const operador = participant.status.initiator?.name || null;\n\n                        // Verifica se o destinationNumber é igual a 1008\n                        if (destinationNumber === \"1000\") {\n                            // Cria um objeto com as informações do ramal e operador\n                            const numberInfo = {\n                                name: operador,\n                                ramal: ramal\n                            };\n\n                            participantsNumberData.push(numberInfo); // Armazena os dados encontrados\n                            break; // Para a execução após encontrar o primeiro registro com destinationNumber igual a 1008\n                        }\n                    }\n                }\n                // Encerra o loop das chamadas se um registro foi encontrado\n                if (participantsNumberData.length > 0) {\n                    break;\n                }\n            }\n        }\n\n        // Verifica os sistemas de resposta interativa\n        const ivrs = participantsData[0].json.body.interactiveVoiceResponseSystems || [];\n        const callStates = participantsData[0].json.body.callStates || [];\n\n        // Verificando os estados de chamada para capturar possíveis opções\n        callStates.forEach((state) => {\n            if (state.interactiveVoiceResponseSystems) {\n                state.interactiveVoiceResponseSystems.forEach((ivr) => {\n                    // Verifica se o valor da opção está presente nos detalhes do nó\n                    if (ivr.type.currentNode && ivr.type.currentNode.option) {\n                        results.push({\n                            id: ivr.id,\n                            option: ivr.type.currentNode.option,\n                            type: ivr.type.value\n                        });\n                    }\n                });\n            }\n        });\n\n        // Se nenhum sistema ou opção foi encontrado\n        if (results.length === 0) {\n            results.push({ message: 'Nenhuma opção disponível. A pesquisa não foi respondida.' });\n        }\n\n        // Retorna também os dados do ramal e operador quando destinationNumber é \"1008\"\n        return {\n            option: results,\n            agents: participantsNumberData.slice(0, 1),\n            callData: extractAgentsAndCallData(participantsData).callData\n        };\n    }\n\n    // Retornar os dados processados\n    const extractedData = extractAgentsAndCallData(items);\n    return {\n        option: results,\n        callData: extractedData.callData\n    };\n}\n\n// Chama a função principal e retorna os resultados\nreturn processItems(items);"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1640,220],"id":"b4bc60b2-8e1d-413b-aa0c-433aae0c20d1","name":"Dados PABX2"},{"parameters":{"jsCode":"/**\n * Formata o timestamp no formato brasileiro DD/MM/YYYY HH:mm:ss\n * @param {string} timestamp - Data e hora em formato ISO\n * @returns {string} - Data formatada\n */\nfunction formatTimestamp(timestamp) {\n    const date = new Date(timestamp);\n    const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone: 'America/Fortaleza'\n    };\n    return date.toLocaleString('pt-BR', options).replace(',', ''); // Remove a vírgula entre data e hora\n}\n\n/**\n * Preenche um array vazio com \"N/A\"\n * @param {Array} dataArray - Array de dados\n * @returns {Array} - Retorna o array ou [\"N/A\"]\n */\nfunction fillWithNA(dataArray) {\n    return dataArray.length > 0 ? dataArray : [\"N/A\"];\n}\n\n/**\n * Extrai participantes do tipo \"LINE\" e dados de chamadas em estado \"ACTIVE\"\n * @param {Array} items - Lista de itens do JSON\n * @returns {Object} - Contém agentes e dados de chamadas\n */\nfunction extractAgentsAndCallData(items) {\n    const participants = items[0].json.body.participants || [];\n    const callStates = items[0].json.body.callStates || [];\n\n    let agents = [];\n    let callData = [];\n\n    // Iterar sobre os participantes para extrair AGENTS\n    participants.forEach(participant => {\n        if (participant.type && participant.type.value === \"LINE\") {\n            agents.push({\n                name: participant.type.name || \"N/A\",\n                ramal: participant.type.extensionNumber || \"N/A\"\n            });\n        }\n    });\n\n      // Iterar sobre os estados das chamadas para extrair dados\n    callStates.forEach(state => {\n        if (state.type === \"ACTIVE\") {\n            const phoneNumbers = state.participants.filter(participant => participant.type.value === \"PHONE_NUMBER\");\n\n            // Verifica se temos ao menos um PHONE_NUMBER e um LINE\n            if (phoneNumbers.length > 0 && agents.length > 0) {\n                // Pesquisa o primeiro participante com informações válidas\n                const validParticipants = state.participants.map(participant => ({\n                    nameEmpresa: participant.type.name || \"N/A\",\n                    numeroEmpresa: participant.type.number || \"N/A\",\n                    numeroClient: participant.type.callee?.number || \"N/A\"\n                }));\n\n                // Encontra o primeiro participante que não é \"N/A\"\n                const firstValidParticipant = validParticipants.find(p => p.nameEmpresa !== \"N/A\" && p.numeroEmpresa !== \"N/A\" && p.numeroClient !== \"N/A\");\n                \n                // Se um participante válido for encontrado, adiciona à callData\n                if (firstValidParticipant) {\n                    callData.push({\n                        dataHora: formatTimestamp(state.timestamp),\n                        participants: [firstValidParticipant] // Armazena somente o primeiro participante válido\n                    });\n                }\n            }\n        }\n    });\n\n    return {\n        agents: fillWithNA(agents),\n        callData: fillWithNA(callData)\n    };\n}\n\n/**\n * Processa os itens e retorna os resultados.\n * @param {Array} items - Lista de itens do JSON\n * @returns {Object} - Dados processados\n */\nfunction processItems(items) {\n    const results = [];\n\n    if (items[0].json.body.message === 'Nenhuma opção encontrada.') {\n        results.push({ message: 'Nenhuma opção encontrada. Tente outra busca.' });\n    } else {\n        const ivrs = items[0].json.body.interactiveVoiceResponseSystems || [];\n        const callStates = items[0].json.body.callStates || [];\n\n        callStates.forEach((state) => {\n            state.interactiveVoiceResponseSystems?.forEach((ivr) => {\n                if (ivr.type.currentNode && ivr.type.currentNode.option) {\n                    results.push({\n                        id: ivr.id,\n                        option: ivr.type.currentNode.option,\n                        type: ivr.type.value\n                    });\n                }\n            });\n        });\n\n        if (results.length === 0) {\n            results.push(null);\n        }\n    }\n\n    const extractedData = extractAgentsAndCallData(items);\n    return {\n        option: results,\n        agents: extractedData.agents,\n        callData: extractedData.callData\n    };\n}\n\n// Chama a função principal e retorna os resultados\nreturn processItems(items);\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1640,420],"id":"16c29c32-597c-48c4-b5eb-0dc8b4a6aa51","name":"Dados PABX"},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"11gka6tXU8F_wFlrKRdP6Eg3nDuD7e93tZWvfZUFStV8","mode":"id"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Telefonia Dados","cachedResultUrl":"https://docs.google.com/spreadsheets/d/11gka6tXU8F_wFlrKRdP6Eg3nDuD7e93tZWvfZUFStV8/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Operador":"={{ $json.Operador }}","Ramal":"={{ $json.Ramal }}","Numero Empresa":"={{ $json[\"Numero Empresa\"] }}","Empresa":"={{ $json.Empresa }}","Numero Cliente":"={{ $json[\"Numero Cliente\"] }}","Nota":"={{ $json.Nota }}","Protocolo":"={{ $json.Protocolo }}","Tipo de Ligação":"={{ $json[\"Status Ligação\"] }}","Setor":"={{ $json.Setor }}","Data":"={{ $json.Data }}","Hora":"={{ $json.Hora }}"},"matchingColumns":[],"schema":[{"id":"Protocolo","displayName":"Protocolo","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Data","displayName":"Data","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Hora","displayName":"Hora","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Tipo de Ligação","displayName":"Tipo de Ligação","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Operador","displayName":"Operador","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Ramal","displayName":"Ramal","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Empresa","displayName":"Empresa","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Numero Empresa","displayName":"Numero Empresa","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Numero Cliente","displayName":"Numero Cliente","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Nota","displayName":"Nota","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Setor","displayName":"Setor","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"c30d4bc7-3cfb-4ee7-a965-7c02174041cd","name":"Google Sheets1","type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-380,280],"alwaysOutputData":false,"credentials":{"googleSheetsOAuth2Api":{"id":"uJngN8mgvNKu2QxE","name":"Google Sheets account Clenildon"}}},{"parameters":{"jsCode":"for (const item of $input.all()) {\n    // Verificar se \"Data Hora\" existe e não é nulo\n    const dataHoraOriginal = item.json[\"Data Hora\"];\n    \n    if (dataHoraOriginal) {\n        // Separar a data e a hora\n        const [data, hora] = dataHoraOriginal.split(\" \");\n        \n        // Formatar a data e a hora\n        const dataFormatada = data; // você pode formatar a data se necessário\n        const horaFormatada = hora; // mantendo a hora sem alterações\n        \n        // Sobrescrever o campo \"Data Hora\" com o valor formatado ou criar novos campos\n        item.json[\"Data\"] = dataFormatada;\n        item.json[\"Hora\"] = horaFormatada;\n    } else {\n        // Caso \"Data Hora\" esteja ausente ou seja nulo, usar um valor padrão\n        item.json[\"Data\"] = \"Data inválida\";\n        item.json[\"Hora\"] = \"Hora inválida\";\n    }\n\n    // Gerar um protocolo único\n    const now = new Date();\n    const dateCompact = now.getFullYear().toString().slice(2) +\n        String(now.getMonth() + 1).padStart(2, '0') +\n        String(now.getDate()).padStart(2, '0') +\n        String(now.getHours()).padStart(2, '0') +\n        String(now.getMinutes()).padStart(2, '0');\n    const randomPart = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\n    const protocolo = `${dateCompact}${randomPart}`;\n    \n    // Adicionar o campo \"Protocolo\" com o valor único\n    item.json.Protocolo = protocolo;\n}\n\nreturn $input.all();\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1280,200],"id":"118736cc-8aef-4b42-84b3-45825c5180f4","name":"Code"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c47f7053-bec6-4e50-b691-79e1fed5407f","leftValue":"={{ $json.Nota }}","rightValue":3,"operator":{"type":"number","operation":"lte"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-400,40],"id":"3af486c5-b118-43e1-8ef4-a62fa70a48e8","name":"Filter2"},{"parameters":{"sendTo":"sac@cearagps.com.br ","subject":"=Relatório de Avaliação Negativa - Protocolo {{ $json.Protocolo }}","message":"=<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Relatório de Avaliação - Atendimento</title>\n    <style>\n        body {\n            font-family: 'Arial', sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #f3f4f6;\n            color: #333;\n        }\n\n        .container {\n            max-width: 600px;\n            margin: 40px auto;\n            background-color: #ffffff;\n            padding: 30px;\n            border-radius: 10px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        h1 {\n            font-size: 24px;\n            color: #4a5568;\n            text-align: center;\n            margin-bottom: 20px;\n            border-bottom: 2px solid #e2e8f0;\n            padding-bottom: 10px;\n        }\n\n        p {\n            margin: 10px 0;\n            line-height: 1.6;\n        }\n\n        .highlight {\n            color: #e53e3e; /* Vermelho para a nota */\n            font-weight: bold;\n        }\n\n        .details {\n            margin-top: 20px;\n            padding: 20px;\n            background-color: #f7fafc;\n            border: 1px solid #e2e8f0;\n            border-radius: 8px;\n        }\n\n        .details p {\n            margin: 5px 0;\n        }\n\n        .details p strong {\n            color: #2d3748;\n        }\n\n        .footer {\n            text-align: center;\n            margin-top: 20px;\n            font-size: 14px;\n            color: #718096;\n        }\n\n        .footer strong {\n            color: #2d3748;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Relatório de Avaliação - Atendimento</h1>\n        <p>Prezado(a),</p>\n        <p>O cliente com número <span><b>{{ $json['Numero Cliente'] }}</b></span> avaliou negativamente o atendimento realizado na ligação de <span><b>{{ $json['Data Hora'] }}</b></span>, atribuindo a nota <span class=\"highlight\">{{ $json.Nota }}</span>.</p>\n        <div class=\"details\">\n            <p><strong>Detalhes da Ligação:</strong></p>\n            <p><strong>Operador:</strong> {{ $json.Operador }}</p>\n            <p><strong>Ramal:</strong> {{ $json.Ramal }}</p>\n            <p><strong>Empresa:</strong> {{ $json.Empresa }}</p>\n            <p><strong>Número da Empresa:</strong> {{ $json['Numero Empresa'] }}</p>\n            <p><strong>Número do Cliente:</strong> {{ $json['Numero Cliente'] }}</p>\n            <p><strong>Nota:</strong> <span class=\"highlight\">{{ $json.Nota }}</span></p>\n            <p><strong>Tipo da Ligação:</strong> {{ $json['Status Ligação'] }}</p>\n            <p><strong>Protocolo:</strong> {{ $json.Protocolo }}</p>\n        </div>\n        <p>Por favor, verifique o caso para possíveis ações de melhoria.</p>\n        <div class=\"footer\">\n            <p>Atenciosamente,</p>\n            <p><strong>T.I Grupo Ramos</strong></p>\n        </div>\n    </div>\n</body>\n</html>\n\n","options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[0,0],"id":"58e02ac1-7098-4580-b583-f4aff9066f63","name":"Gmail","webhookId":"e55b441d-2b6d-4aeb-a9f4-d92141c875bc","credentials":{"gmailOAuth2":{"id":"8EJqxKyYGT38mIP7","name":"Gmail account Clenildon"}}},{"parameters":{"assignments":{"assignments":[{"id":"0c8814f5-bb23-45fc-bb5f-bae6d314ca08","name":"Data Hora","value":"={{ $json.callData[0].dataHora }}","type":"string"},{"id":"db26c79b-0455-4dfb-83c6-4f1d1ac645b5","name":"Operador","value":"={{ $json.agents[0].name }}","type":"string"},{"id":"ba9b4a58-5eaf-4192-bf44-de7c2269f1db","name":"Ramal","value":"={{ $json.agents[0].ramal }}","type":"string"},{"id":"c1b0cea3-f133-4960-bc9d-3e991d13a049","name":"Empresa","value":"={{ $json.callData[0].participants[0].nameEmpresa }}","type":"string"},{"id":"de7a6c02-c40a-4f46-82f0-8ecdabf89da7","name":"Numero Empresa","value":"={{ $json.callData[0].participants[0].numeroEmpresa }}","type":"string"},{"id":"8613468b-9b16-45fe-b9b9-720b680833e8","name":"Numero Cliente","value":"={{ $json.callData[0].participants[0].numeroClient }}","type":"string"},{"id":"7f7a91cd-a3e5-4bb3-9c78-86f31133edb4","name":"Nota","value":"={{ $json.option[1].option}}","type":"number"},{"id":"7ee79f91-a97a-4bdf-a120-140c2979fc0c","name":"Protocolo","value":"","type":"string"},{"id":"f1123190-d5c0-4687-9e32-e6d6e2840599","name":"Status Ligação","value":"Receptiva","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1460,200],"id":"018e6a5d-4ac7-43bd-9a80-b8b09fcff131","name":"Formatando Dados - Recepitiva"},{"parameters":{"assignments":{"assignments":[{"id":"0c8814f5-bb23-45fc-bb5f-bae6d314ca08","name":"Data Hora","value":"={{ $json.callData[0].dataHora }}","type":"string"},{"id":"db26c79b-0455-4dfb-83c6-4f1d1ac645b5","name":"Operador","value":"={{ $json.agents[0].name }}","type":"string"},{"id":"ba9b4a58-5eaf-4192-bf44-de7c2269f1db","name":"Ramal","value":"={{ $json.agents[0].ramal }}","type":"string"},{"id":"c1b0cea3-f133-4960-bc9d-3e991d13a049","name":"Empresa","value":"={{ $json.callData[0].participants[0].nameEmpresa }}","type":"string"},{"id":"de7a6c02-c40a-4f46-82f0-8ecdabf89da7","name":"Numero Empresa","value":"={{ $json.callData[0].participants[0].numeroEmpresa }}","type":"string"},{"id":"8613468b-9b16-45fe-b9b9-720b680833e8","name":"Numero Cliente","value":"={{ $json.callData[0].participants[0].numeroClient }}","type":"string"},{"id":"7f7a91cd-a3e5-4bb3-9c78-86f31133edb4","name":"Nota","value":"={{ $json.option[0].option}}","type":"number"},{"id":"7ee79f91-a97a-4bdf-a120-140c2979fc0c","name":"Protocolo","value":"","type":"string"},{"id":"f1123190-d5c0-4687-9e32-e6d6e2840599","name":"Status Ligação","value":"Ativa","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1440,420],"id":"ed433efc-eeab-40f5-81bf-77c831a0c92e","name":"Formatando Dados Ativa"},{"parameters":{"jsCode":"for (const item of $input.all()) {\n    // Verificar se \"Data Hora\" existe e não é nulo\n    const dataHoraOriginal = item.json[\"Data Hora\"];\n    \n    if (dataHoraOriginal) {\n        // Separar a data e a hora\n        const [data, hora] = dataHoraOriginal.split(\" \");\n        \n        // Formatar a data e a hora\n        const dataFormatada = data; // você pode formatar a data se necessário\n        const horaFormatada = hora; // mantendo a hora sem alterações\n        \n        // Sobrescrever o campo \"Data Hora\" com o valor formatado ou criar novos campos\n        item.json[\"Data\"] = dataFormatada;\n        item.json[\"Hora\"] = horaFormatada;\n    } else {\n        // Caso \"Data Hora\" esteja ausente ou seja nulo, usar um valor padrão\n        item.json[\"Data\"] = \"Data inválida\";\n        item.json[\"Hora\"] = \"Hora inválida\";\n    }\n\n    // Gerar um protocolo único\n    const now = new Date();\n    const dateCompact = now.getFullYear().toString().slice(2) +\n        String(now.getMonth() + 1).padStart(2, '0') +\n        String(now.getDate()).padStart(2, '0') +\n        String(now.getHours()).padStart(2, '0') +\n        String(now.getMinutes()).padStart(2, '0');\n    const randomPart = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\n    const protocolo = `${dateCompact}${randomPart}`;\n    \n    // Adicionar o campo \"Protocolo\" com o valor único\n    item.json.Protocolo = protocolo;\n}\n\nreturn $input.all();\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1260,420],"id":"6aca4bdf-af94-4222-96aa-d288e5e198d8","name":"Code1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e96fa4d6-b989-4374-a06c-3e5b0461ec2d","leftValue":"={{ $json.Nota }}","rightValue":"","operator":{"type":"number","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-880,420],"id":"cecb190f-dbc3-414a-8c5a-972b3cca26a9","name":"Verificar se Há Nota"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"37c49396-6e9b-4f51-866c-80267885d30f","leftValue":"={{ $json.Nota }}","rightValue":"","operator":{"type":"number","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-920,180],"id":"0908c3d5-b490-48e1-b067-325d4ee33934","name":"Verificar se há Nota Recepitiva"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c47f7053-bec6-4e50-b691-79e1fed5407f","leftValue":"={{ $json.Nota }}","rightValue":3,"operator":{"type":"number","operation":"lte"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-180,560],"id":"aab42b25-e3b7-430a-a1e2-4784e5a0945e","name":"Filter"},{"parameters":{"sendTo":"sac@cearagps.com.br ","subject":"=Relatório de Avaliação Negativa - Protocolo {{ $json.Protocolo }}","message":"=<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Relatório de Avaliação - Atendimento</title>\n    <style>\n        body {\n            font-family: 'Arial', sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #f3f4f6;\n            color: #333;\n        }\n\n        .container {\n            max-width: 600px;\n            margin: 40px auto;\n            background-color: #ffffff;\n            padding: 30px;\n            border-radius: 10px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        h1 {\n            font-size: 24px;\n            color: #4a5568;\n            text-align: center;\n            margin-bottom: 20px;\n            border-bottom: 2px solid #e2e8f0;\n            padding-bottom: 10px;\n        }\n\n        p {\n            margin: 10px 0;\n            line-height: 1.6;\n        }\n\n        .highlight {\n            color: #e53e3e; /* Vermelho para a nota */\n            font-weight: bold;\n        }\n\n        .details {\n            margin-top: 20px;\n            padding: 20px;\n            background-color: #f7fafc;\n            border: 1px solid #e2e8f0;\n            border-radius: 8px;\n        }\n\n        .details p {\n            margin: 5px 0;\n        }\n\n        .details p strong {\n            color: #2d3748;\n        }\n\n        .footer {\n            text-align: center;\n            margin-top: 20px;\n            font-size: 14px;\n            color: #718096;\n        }\n\n        .footer strong {\n            color: #2d3748;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Relatório de Avaliação - Atendimento</h1>\n        <p>Prezado(a),</p>\n        <p>O cliente com número <span><b>{{ $json['Numero Cliente'] }}</b></span> avaliou negativamente o atendimento realizado na ligação de <span><b>{{ $json['Data Hora'] }}</b></span>, atribuindo a nota <span class=\"highlight\">{{ $json.Nota }}</span>.</p>\n        <div class=\"details\">\n            <p><strong>Detalhes da Ligação:</strong></p>\n            <p><strong>Operador:</strong> {{ $json.Operador }}</p>\n            <p><strong>Ramal:</strong> {{ $json.Ramal }}</p>\n            <p><strong>Empresa:</strong> {{ $json.Empresa }}</p>\n            <p><strong>Número da Empresa:</strong> {{ $json['Numero Empresa'] }}</p>\n            <p><strong>Número do Cliente:</strong> {{ $json['Numero Cliente'] }}</p>\n            <p><strong>Nota:</strong> <span class=\"highlight\">{{ $json.Nota }}</span></p>\n            <p><strong>Tipo da Ligação:</strong> {{ $json['Status Ligação'] }}</p>\n            <p><strong>Protocolo:</strong> {{ $json.Protocolo }}</p>\n        </div>\n        <p>Por favor, verifique o caso para possíveis ações de melhoria.</p>\n        <div class=\"footer\">\n            <p>Atenciosamente,</p>\n            <p><strong>T.I Grupo Ramos</strong></p>\n        </div>\n    </div>\n</body>\n</html>\n\n","options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[20,560],"id":"c45c23a0-1b86-44fd-a9af-35e24d17b07d","name":"Gmail1","webhookId":"e55b441d-2b6d-4aeb-a9f4-d92141c875bc","credentials":{"gmailOAuth2":{"id":"8EJqxKyYGT38mIP7","name":"Gmail account Clenildon"}}},{"parameters":{"jsCode":"// Loop sobre os itens de entrada e adiciona um novo campo chamado \"Setor\"\nfor (const item of $input.all()) {\n  // Define um valor padrão para o setor\n  let setor;\n\n  // Acessa o ramal da propriedade do item\n  const ramal = item.json.Ramal;\n\n  // Mapeia os ramais para seus respectivos setores\n  if ([\"6100\", \"6101\", \"6102\", \"6103\", \"6104\", \"6105\", \"6106\", \"6107\", \"6108\", \"6109\", \"6110\", \"6111\", \"6112\", \"6130\", \"6132\"].includes(ramal)) {\n    setor = \"Central\";\n  } else if (ramal === \"6113\") {\n    setor = \"Agendamento\";\n  } else if (ramal === \"6116\") {\n    setor = \"Administrativo\";\n  } else if ([\"6117\", \"6118\", \"6119\", \"6120\", \"6121\", \"6122\", \"6123\", \"6124\"].includes(ramal)) {\n    setor = \"Recebiveis\";\n  } else if ([\"6128\", \"6129\", \"6131\", \"6114\", \"6115\"].includes(ramal)) {\n    setor = \"Comercial\";\n  } else if (ramal === \"6133\") {\n    setor = \"Sucesso do Cliente\";\n  } else if (ramal === \"6134\") {\n    setor = \"TI\";\n  } else if (ramal === \"6125\") {\n    setor = \"Suporte CRX\";\n  } else if (ramal === \"6126\") {\n    setor = \"Comercial CRX\";\n  } else if (ramal === \"6127\") {\n    setor = \"Financeiro CRX\";\n  } else {\n    setor = \"Desconhecido\"; // Para ramais que não se encaixam nas regras\n  }\n\n  // Adiciona o setor ao item\n  item.json.Setor = setor;\n}\n\nreturn $input.all();\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1100,200],"id":"45a6774a-caea-4f99-baf7-640c4a8aa428","name":"Campo setor Logica"},{"parameters":{"jsCode":"// Loop sobre os itens de entrada e adiciona um novo campo chamado \"Setor\"\nfor (const item of $input.all()) {\n  // Define um valor padrão para o setor\n  let setor;\n\n  // Acessa o ramal da propriedade do item\n  const ramal = item.json.Ramal;\n\n  // Mapeia os ramais para seus respectivos setores\n  if ([\"6100\", \"6101\", \"6102\", \"6103\", \"6104\", \"6105\", \"6106\", \"6107\", \"6108\", \"6109\", \"6110\", \"6111\", \"6112\", \"6130\", \"6132\"].includes(ramal)) {\n    setor = \"Central\";\n  } else if (ramal === \"6113\") {\n    setor = \"Agendamento\";\n  } else if (ramal === \"6116\") {\n    setor = \"Administrativo\";\n  } else if ([\"6117\", \"6118\", \"6119\", \"6120\", \"6121\", \"6122\", \"6123\", \"6124\"].includes(ramal)) {\n    setor = \"Recebiveis\";\n  } else if ([\"6128\", \"6129\", \"6131\", \"6114\", \"6115\"].includes(ramal)) {\n    setor = \"Comercial\";\n  } else if (ramal === \"6133\") {\n    setor = \"Sucesso do Cliente\";\n  } else if (ramal === \"6134\") {\n    setor = \"TI\";\n  } else if (ramal === \"6125\") {\n    setor = \"Suporte CRX\";\n  } else if (ramal === \"6126\") {\n    setor = \"Comercial CRX\";\n  } else if (ramal === \"6127\") {\n    setor = \"Financeiro CRX\";\n  } else {\n    setor = \"Desconhecido\"; // Para ramais que não se encaixam nas regras\n  }\n\n  // Adiciona o setor ao item\n  item.json.Setor = setor;\n}\n\nreturn $input.all();\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1100,420],"id":"e37169db-5e0c-4617-8a82-9a7f99d861a3","name":"Campo setor Logica1"},{"parameters":{"jsCode":"for (const item of $input.all()) {\n    // Verificar se \"Data Hora\" existe e não é nulo\n    const dataHoraOriginal = item.json[\"Data Hora\"];\n    \n    if (dataHoraOriginal) {\n        // Adicionar \"às\" ao valor de \"Data Hora\", separando data e hora\n        const [data, hora] = dataHoraOriginal.split(\" \");\n        const dataHoraFormatada = `${data} às ${hora}`;\n        \n        // Sobrescrever o campo \"Data Hora\" com o valor formatado\n        item.json[\"Data Hora\"] = dataHoraFormatada;\n    } else {\n        // Caso \"Data Hora\" esteja ausente ou seja nulo, usar um valor padrão\n        item.json[\"Data Hora\"] = \"Data/Hora inválida\";\n    }\n}\n\nreturn $input.all();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-680,80],"id":"c5726483-654f-4dc7-9ad7-90d847d5ecfb","name":"Code2"},{"parameters":{"jsCode":"for (const item of $input.all()) {\n    // Verificar se \"Data Hora\" existe e não é nulo\n    const dataHoraOriginal = item.json[\"Data Hora\"];\n    \n    if (dataHoraOriginal) {\n        // Adicionar \"às\" ao valor de \"Data Hora\", separando data e hora\n        const [data, hora] = dataHoraOriginal.split(\" \");\n        const dataHoraFormatada = `${data} às ${hora}`;\n        \n        // Sobrescrever o campo \"Data Hora\" com o valor formatado\n        item.json[\"Data Hora\"] = dataHoraFormatada;\n    } else {\n        // Caso \"Data Hora\" esteja ausente ou seja nulo, usar um valor padrão\n        item.json[\"Data Hora\"] = \"Data/Hora inválida\";\n    }\n}\n\nreturn $input.all();\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-600,500],"id":"09a5abcc-f9d3-4c88-86fb-41e6bb3bf460","name":"Code3"}],"connections":{"Webhook1":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Dados PABX2","type":"main","index":0}],[{"node":"Dados PABX","type":"main","index":0}]]},"Dados PABX":{"main":[[{"node":"Formatando Dados Ativa","type":"main","index":0}]]},"Dados PABX2":{"main":[[{"node":"Formatando Dados - Recepitiva","type":"main","index":0}]]},"Code":{"main":[[{"node":"Campo setor Logica","type":"main","index":0}]]},"Filter2":{"main":[[{"node":"Gmail","type":"main","index":0}]]},"Formatando Dados - Recepitiva":{"main":[[{"node":"Code","type":"main","index":0}]]},"Formatando Dados Ativa":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Campo setor Logica1","type":"main","index":0}]]},"Verificar se Há Nota":{"main":[[{"node":"Google Sheets1","type":"main","index":0},{"node":"Code3","type":"main","index":0}]]},"Verificar se há Nota Recepitiva":{"main":[[{"node":"Google Sheets1","type":"main","index":0},{"node":"Code2","type":"main","index":0}]]},"Filter":{"main":[[{"node":"Gmail1","type":"main","index":0}]]},"Campo setor Logica":{"main":[[{"node":"Verificar se há Nota Recepitiva","type":"main","index":0}]]},"Campo setor Logica1":{"main":[[{"node":"Verificar se Há Nota","type":"main","index":0}]]},"Code2":{"main":[[{"node":"Filter2","type":"main","index":0}]]},"Code3":{"main":[[{"node":"Filter","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook1":[{"json":{"headers":{"host":"n8nwebhook.cearatec.cloud","user-agent":"axios/1.7.9","content-length":"17349","accept":"application/json, text/plain, */*","accept-encoding":"gzip, br","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"185.249.227.23","cf-ipcountry":"DE","cf-ray":"91ca355ac85df803-DUS","cf-visitor":"{\"scheme\":\"https\"}","content-type":"application/json","x-forwarded-for":"185.249.227.23, 172.69.109.120","x-forwarded-host":"n8nwebhook.cearatec.cloud","x-forwarded-port":"443","x-forwarded-proto":"https","x-forwarded-server":"b17d2d91e4f5","x-real-ip":"172.69.109.120"},"params":{},"query":{},"body":{"conversationSpaceId":"7a9e06a9-ce24-35f5-ad60-b8c74c2de4e2","callCreated":"2025-03-07T12:48:01.733Z","callEnded":"2025-03-07T12:48:34.857Z","callInitiator":"DIRECT","direction":"OUTBOUND","accountKey":"8621343684556870338","participants":[{"id":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"d95dceab-dd17-4864-bbb6-673a6b56661d","recordings":[{"id":"d2bd8b48-bc6c-4eff-b268-bf0817946efa","startTimestamp":"2025-03-07T12:48:04.568Z"}],"type":{"value":"LINE","lineId":"b14970b5-274a-4ea6-9572-865f0bad7f45","deviceId":"8404d181-bd81-4fbf-b30a-6c141078671d","extensionNumber":"6134","name":"Elivelton Bosco","userId":"3a3c5acf-d726-448c-aeb7-3ceaec749bfe","userKey":"4292254144773371329"}},{"id":"11cb1e97-0832-55e7-af53-f5acad242139","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"9374fb14-5083-40dc-a271-e5400a466be2","recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"type":{"value":"PHONE_NUMBER","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f","number":"+558534846006","callee":{"name":"","number":"+5585986930095"}}}],"interactiveVoiceResponseSystems":[],"associatedConversations":[],"hangupOriginatorId":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","callStates":[{"id":"095083ab-cf37-5141-bbf0-bf613b3b4266","type":"STARTING","sequenceNumber":1,"timestamp":"2025-03-07T12:48:01.733Z","participants":[{"id":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"d95dceab-dd17-4864-bbb6-673a6b56661d","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"Elivelton Bosco","value":"LINE","device":{"id":"8404d181-bd81-4fbf-b30a-6c141078671d","model":"goto.clients"},"lineId":"b14970b5-274a-4ea6-9572-865f0bad7f45","deviceId":"8404d181-bd81-4fbf-b30a-6c141078671d","extensionNumber":"6134"},"status":{"value":"RINGING"}}]},{"id":"5e9b9131-5ae2-5fcf-92f1-54152612dd39","type":"STARTING","sequenceNumber":2,"timestamp":"2025-03-07T12:48:01.781Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"status":{"value":"RINGING"}},{"id":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"d95dceab-dd17-4864-bbb6-673a6b56661d","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"Elivelton Bosco","value":"LINE","device":{"id":"8404d181-bd81-4fbf-b30a-6c141078671d","model":"goto.clients"},"lineId":"b14970b5-274a-4ea6-9572-865f0bad7f45","deviceId":"8404d181-bd81-4fbf-b30a-6c141078671d","extensionNumber":"6134"},"status":{"value":"RINGING"}}]},{"id":"56ebcf6f-dceb-5dfc-8747-58d9887bfd48","type":"ACTIVE","sequenceNumber":3,"timestamp":"2025-03-07T12:48:09.626Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"status":{"value":"RINGING"}},{"id":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"d95dceab-dd17-4864-bbb6-673a6b56661d","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"Elivelton Bosco","value":"LINE","device":{"id":"8404d181-bd81-4fbf-b30a-6c141078671d","model":"goto.clients"},"lineId":"b14970b5-274a-4ea6-9572-865f0bad7f45","deviceId":"8404d181-bd81-4fbf-b30a-6c141078671d","extensionNumber":"6134"},"recordings":[{"id":"d2bd8b48-bc6c-4eff-b268-bf0817946efa","startTimestamp":"2025-03-07T12:48:04.568Z"}],"status":{"value":"CONNECTED"}}]},{"id":"5c06537a-476a-5fe0-aa62-d262ce89e312","type":"ACTIVE","sequenceNumber":4,"timestamp":"2025-03-07T12:48:09.626Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"status":{"value":"CONNECTED"}},{"id":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"d95dceab-dd17-4864-bbb6-673a6b56661d","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"Elivelton Bosco","value":"LINE","device":{"id":"8404d181-bd81-4fbf-b30a-6c141078671d","model":"goto.clients"},"lineId":"b14970b5-274a-4ea6-9572-865f0bad7f45","deviceId":"8404d181-bd81-4fbf-b30a-6c141078671d","extensionNumber":"6134"},"recordings":[{"id":"d2bd8b48-bc6c-4eff-b268-bf0817946efa","startTimestamp":"2025-03-07T12:48:04.568Z"}],"status":{"value":"CONNECTED"}}]},{"id":"9ca20791-0f74-5734-801c-2efcc29e5e9c","type":"ACTIVE","sequenceNumber":5,"timestamp":"2025-03-07T12:48:19.072Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_DIRECT_TRANSFER","initiator":{"name":"Elivelton Bosco","participantId":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","extensionNumber":"6134","conversationSpaceId":"7a9e06a9-ce24-35f5-ad60-b8c74c2de4e2"},"destination":{"number":"1000"}}},{"id":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"d95dceab-dd17-4864-bbb6-673a6b56661d","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"Elivelton Bosco","value":"LINE","device":{"id":"8404d181-bd81-4fbf-b30a-6c141078671d","model":"goto.clients"},"lineId":"b14970b5-274a-4ea6-9572-865f0bad7f45","deviceId":"8404d181-bd81-4fbf-b30a-6c141078671d","extensionNumber":"6134"},"recordings":[{"id":"d2bd8b48-bc6c-4eff-b268-bf0817946efa","startTimestamp":"2025-03-07T12:48:04.568Z"}],"status":{"value":"CONNECTED"}}]},{"id":"6482c6cc-a932-5bf5-a3b6-b94fe7fef9f9","type":"ACTIVE","sequenceNumber":6,"timestamp":"2025-03-07T12:48:19.104Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}},{"id":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"d95dceab-dd17-4864-bbb6-673a6b56661d","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"Elivelton Bosco","value":"LINE","device":{"id":"8404d181-bd81-4fbf-b30a-6c141078671d","model":"goto.clients"},"lineId":"b14970b5-274a-4ea6-9572-865f0bad7f45","deviceId":"8404d181-bd81-4fbf-b30a-6c141078671d","extensionNumber":"6134"},"recordings":[{"id":"d2bd8b48-bc6c-4eff-b268-bf0817946efa","startTimestamp":"2025-03-07T12:48:04.568Z"}],"status":{"value":"CONNECTED"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"AttendantPromptNode_1002","type":"AttendantPromptNode"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"","connector":""}},"status":{"value":"CONNECTED"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"0fef2ef9-7b2c-5860-b841-98611dfe6c83","type":"ACTIVE","sequenceNumber":7,"timestamp":"2025-03-07T12:48:19.119Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}},{"id":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","legId":"d95dceab-dd17-4864-bbb6-673a6b56661d","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"Elivelton Bosco","value":"LINE","device":{"id":"8404d181-bd81-4fbf-b30a-6c141078671d","model":"goto.clients"},"lineId":"b14970b5-274a-4ea6-9572-865f0bad7f45","deviceId":"8404d181-bd81-4fbf-b30a-6c141078671d","extensionNumber":"6134"},"recordings":[{"id":"d2bd8b48-bc6c-4eff-b268-bf0817946efa","startTimestamp":"2025-03-07T12:48:04.568Z"}],"status":{"value":"DISCONNECTING"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"AttendantPromptNode_1002","type":"AttendantPromptNode"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"","connector":""}},"status":{"value":"CONNECTED"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"68d8f3ab-0207-53d0-b18a-fec8abfcfe27","type":"ACTIVE","sequenceNumber":8,"timestamp":"2025-03-07T12:48:27.371Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"AttendantPromptNode_1002","type":"AttendantPromptNode","option":"1","result":"DIALED_OPTION"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"","connector":""}},"status":{"value":"CONNECTED"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"e8d20fb7-131e-57d9-9bb0-f59b08a090c5","type":"ACTIVE","sequenceNumber":9,"timestamp":"2025-03-07T12:48:27.371Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"ModifyCallerIdNode_1003","type":"ModifyCallerIdNode"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"AttendantPromptNode_1002","connector":"option_1"}},"status":{"value":"CONNECTED"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"f008a33f-905a-5955-9d75-26b8276129d9","type":"ACTIVE","sequenceNumber":10,"timestamp":"2025-03-07T12:48:27.373Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"ModifyCallerIdNode_1003","type":"ModifyCallerIdNode","result":"CONTINUE"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"AttendantPromptNode_1002","connector":"option_1"}},"status":{"value":"CONNECTED"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"4492599b-c895-50db-90d2-6f2b79e67a91","type":"ACTIVE","sequenceNumber":11,"timestamp":"2025-03-07T12:48:27.472Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"PlaySoundClipNode_1006","type":"PlaySoundClipNode"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"ModifyCallerIdNode_1003","connector":"nextNode"}},"status":{"value":"CONNECTED"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"bdf6085a-ad95-5db2-a9b8-9dc7cdd0ccc9","type":"ACTIVE","sequenceNumber":12,"timestamp":"2025-03-07T12:48:34.696Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"PlaySoundClipNode_1006","type":"PlaySoundClipNode","result":"CONTINUE"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"ModifyCallerIdNode_1003","connector":"nextNode"}},"status":{"value":"CONNECTED"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"7e932919-454f-53bc-b1b5-2aac227fd3e0","type":"ACTIVE","sequenceNumber":13,"timestamp":"2025-03-07T12:48:34.697Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"HangupNode_1024","type":"HangupNode"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"PlaySoundClipNode_1006","connector":"nextNode"}},"status":{"value":"CONNECTED"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"d1a88e82-9a19-5eb3-ab60-9f7946ca4c69","type":"ACTIVE","sequenceNumber":14,"timestamp":"2025-03-07T12:48:34.753Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"IN_INTERACTIVE_VOICE_RESPONSE"}}],"interactiveVoiceResponseSystems":[{"id":"a9f20703-7645-5282-8679-2e010e25a83e","type":{"value":"DIAL_PLAN","dialPlanId":"af236b1e-8c37-4971-be61-334bf66db8fa","currentNode":{"id":"HangupNode_1024","type":"HangupNode","result":"COMPLETED"},"executionId":"8e0a40d3-eb64-4b19-b645-6cfcc11ac90d","previousNode":{"id":"PlaySoundClipNode_1006","connector":"nextNode"}},"status":{"value":"DISCONNECTING"},"originator":"11cb1e97-0832-55e7-af53-f5acad242139"}]},{"id":"7c4f2f10-02df-51ec-bc04-b2a4ede04a7b","type":"ENDING","sequenceNumber":15,"timestamp":"2025-03-07T12:48:34.857Z","participants":[{"id":"11cb1e97-0832-55e7-af53-f5acad242139","legId":"9374fb14-5083-40dc-a271-e5400a466be2","originator":"9a4d2547-0cc7-5f01-9bed-6aa66f9172da","type":{"name":"CearaGPS","value":"PHONE_NUMBER","callee":{"name":"","number":"+5585986930095"},"number":"+558534846006","phoneNumberId":"c30dc08d-d7cc-4cad-a967-8db6552e558f"},"recordings":[{"id":"6033cc3d-c3a5-4cb4-870b-735636d3a161","startTimestamp":"2025-03-07T12:48:09.629Z"}],"status":{"value":"DISCONNECTING"}}]}]},"webhookUrl":"https://n8nwebhook.cearatec.cloud/webhook/nps02_teste","executionMode":"production"}}]},"versionId":"9cd5cc61-e9de-4e17-bf86-bc8c001f95a7","triggerCount":1,"tags":[{"createdAt":"2025-03-07T12:31:50.086Z","updatedAt":"2025-03-07T12:31:50.086Z","id":"fBKdDoZlHmijIMTu","name":"NPS-Ramos"}]}